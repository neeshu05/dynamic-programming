Given an array and a number k, find the largest sum of the subarray containing at least k numbers.
It may be assumed that the size of array is at-least k. 

Example 1:

Input : 
n = 4
arr[] = {-4, -2, 1, -3}
k = 2
Output : 
-1
Explanation :
The sub array is {-2, 1}


def helper(arr,k):
    l = 0
    r = 0
    cur_sum = 0
    max_sum = float('-inf')
    window = 0
    min_window = 0
    while r < n:
        cur_sum += arr[r] 
        if r - l + 1 == k:
            max_sum = max(cur_sum,max_sum)
        
        if r - l + 1 > k:
            window += arr[l]
            l += 1
            min_window = min(window,min_window)
            max_sum = max(max_sum,cur_sum - min_window)
            
        r += 1
    return max_sum
